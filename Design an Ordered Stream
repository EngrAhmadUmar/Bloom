class OrderedStream:

    def __init__(self, n: int):
        #iniatializing our result array
        self.result = [None] * n
        #initializing our pointer to help us maintain the order while printing
        self.pointer = 0

    def insert(self, idKey: int, value: str) -> List[str]:
        #assigning the value to the id in the array
        self.result[idKey-1] = value
        
        
        #initializing my result value
        res = []
        
        #now to append the values we can print to our res variable
        while self.pointer < len(self.result) and self.result[self.pointer]:
            res.append(self.result[self.pointer])
            self.pointer += 1
            
        #return res
        return res
time = o(n) since you look at each node once


# Your OrderedStream object will be instantiated and called as such:
# obj = OrderedStream(n)
# param_1 = obj.insert(idKey,value)
