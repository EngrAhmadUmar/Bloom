class UndergroundSystem:

    def __init__(self):
        #initialising our check in dictionary
        #key = customer id and value is tuple of (timestart and startstation)
        self.i = defaultdict(tuple)

        #initialising our check out dictionary
        #key = (start and end times) and value is list of (timeend-timestart)
        self.o = defaultdict(list)
        
    def checkIn(self, id: int, stationName: str, t: int) -> None:
        #we add the id of the customer and the starttime and stations
        self.i[id] = (t, stationName)

    def checkOut(self, id: int, stationName: str, t: int) -> None:
        #here we get the values from the check in dictionary
        starttime, startstation = self.i[id]
        #we find the time taken by subtracting t from start time
        total = t-starttime
        #we add the result to our checkout dictionary
        self.o[(startstation, stationName)].append(total)

    def getAverageTime(self, startStation: str, endStation: str) -> float:
        #here we return the average time taken by suming all the total times and dividing it by the length of our list.
        return sum(self.o[(startStation, endStation)])/len(self.o[(startStation, endStation)])
