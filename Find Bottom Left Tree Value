# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def findBottomLeftValue(self, root: Optional[TreeNode]) -> int:
        #we use bfs but we do the traversal from right to left
        # in that case the last element if the left most node.
        
        #bfs basically means traversing level by level,
        #but doesnt show the particular direction.
        
        
        queue = [root]
        while queue:
            node = queue.pop(0)
            if node.right:
                queue.append(node.right)
            if node.left:
                queue.append(node.left)
                
        return node.val
                
